name: Docker Build
on:
  push:

jobs:
  build-signal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2


    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build signal server
      run: |
        cargo build --release -p signal

    - uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: fledgre/signal
        registry: docker.io
        dockerfile: Dockerfile.signal
        username: ${{ secrets.DOCKERHUB_NAME }}
        password: ${{ secrets.DOCKERHUB }}

    # - name: Build Signalling server
    #   uses: whoan/docker-build-with-cache-action@v5
    #   with:
    #     username: ineiti
    #     password: "${{ secrets.GITHUB_TOKEN }}"
    #     registry: docker.pkg.github.com
    #     image_name: ineiti/fledger/signal
    #     dockerfile: Dockerfile.signal.new

  # build-flnode:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build CLI Fledger Node
  #     uses: whoan/docker-build-with-cache-action@v5
  #     with:
  #       username: ${{ secrets.DOCKERHUB_NAME }}
  #       password: ${{ secrets.DOCKERHUB }}
  #       image_name: fledgre/flnode
  #       dockerfile: Dockerfile.flnode

  # build-web:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build Web Fledger Node
  #     uses: whoan/docker-build-with-cache-action@v5
  #     with:
  #       username: ${{ secrets.DOCKERHUB_NAME }}
  #       password: ${{ secrets.DOCKERHUB }}
  #       image_name: fledgre/web
  #       dockerfile: Dockerfile.web

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build-signal
  #     - build-flnode
  #     - build-web

    # - name: Update signal.fledg.re
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: signal.fledg.re
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_KEY }}
    #     script: |
    #       docker-compose down
    #       docker-compose pull
    #       docker-compose up -d
