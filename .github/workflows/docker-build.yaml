name: Docker Build
on:
  push:
    branches:
    - main
    - docker_caching_2

jobs:
  build-signal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2


    - name: pre-load images
      run: echo lukemathwalker/cargo-chef rust | xargs -n 1 docker pull
      
    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Build the Docker image
      run: docker build -t fledgre/signal:latest -f Dockerfile.signal . --progress plain

    # - name: Build Signalling server
    #   uses: whoan/docker-build-with-cache-action@v5
    #   with:
    #     username: ineiti
    #     password: "${{ secrets.GITHUB_TOKEN }}"
    #     registry: docker.pkg.github.com
    #     image_name: ineiti/fledger/signal
    #     dockerfile: Dockerfile.signal.new

  # build-flnode:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build CLI Fledger Node
  #     uses: whoan/docker-build-with-cache-action@v5
  #     with:
  #       username: ${{ secrets.DOCKERHUB_NAME }}
  #       password: ${{ secrets.DOCKERHUB }}
  #       image_name: fledgre/flnode
  #       dockerfile: Dockerfile.flnode

  # build-web:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build Web Fledger Node
  #     uses: whoan/docker-build-with-cache-action@v5
  #     with:
  #       username: ${{ secrets.DOCKERHUB_NAME }}
  #       password: ${{ secrets.DOCKERHUB }}
  #       image_name: fledgre/web
  #       dockerfile: Dockerfile.web

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build-signal
  #     - build-flnode
  #     - build-web

    # - name: Update signal.fledg.re
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: signal.fledg.re
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_KEY }}
    #     script: |
    #       docker-compose down
    #       docker-compose pull
    #       docker-compose up -d
